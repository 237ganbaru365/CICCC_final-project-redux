{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fumina/Documents/project/practice/07_nextJS/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\n// import { useEffect, useState } from \"react/cjs/react.development\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  // in nomal react we use this syntax, but since it's back to empty html as a SPA, it's also gonna be a problem for SEO\n  // so nextjs has another approach which called \"page pre-render\" for this\n  // const [loadedMettups, setLoadedMeetyups] = useState([]);\n  // useEffect(() => {\n  //   // set a http request and fetch data\n  //   setLoadedMeetyups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n} // // this function runs everytime for incoming requests\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: DUMMY_MEETUPS,\n//   };\n// }\n// this function ONLY can use in page components\n// getStaticProps does NOT allow us to change the name\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://fumina237:Na3579fumi@cluster0.s2s5v.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    // you need to always return an object here\n    // IMPORTANT the object has included \"props\", and it has be named props\n    // so that this component can recieve this props\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // to unlock the features called incremental Static Generation\n    // revalidate needs a number of second to wait untill it regenerates this page for an incoming request\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/fumina/Documents/project/practice/07_nextJS/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACL;AACA;AACA;AACAV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KAJF;AAYL;AACA;AACAC,IAAAA,UAAU,EAAE;AAdP,GAAP;AAgBD;AAED,eAAepB,QAAf","sourcesContent":["// import { useEffect, useState } from \"react/cjs/react.development\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  // in nomal react we use this syntax, but since it's back to empty html as a SPA, it's also gonna be a problem for SEO\n  // so nextjs has another approach which called \"page pre-render\" for this\n  // const [loadedMettups, setLoadedMeetyups] = useState([]);\n\n  // useEffect(() => {\n  //   // set a http request and fetch data\n  //   setLoadedMeetyups(DUMMY_MEETUPS);\n  // }, []);\n\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// // this function runs everytime for incoming requests\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   // fetch data from an API\n//   return {\n//     props: DUMMY_MEETUPS,\n//   };\n// }\n\n// this function ONLY can use in page components\n// getStaticProps does NOT allow us to change the name\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://fumina237:Na3579fumi@cluster0.s2s5v.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    // you need to always return an object here\n    // IMPORTANT the object has included \"props\", and it has be named props\n    // so that this component can recieve this props\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    // to unlock the features called incremental Static Generation\n    // revalidate needs a number of second to wait untill it regenerates this page for an incoming request\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}