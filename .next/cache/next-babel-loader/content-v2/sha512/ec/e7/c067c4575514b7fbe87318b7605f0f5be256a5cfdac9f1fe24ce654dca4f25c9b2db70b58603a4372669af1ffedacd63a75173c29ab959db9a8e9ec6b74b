{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n// import { useEffect, useState } from \"react/cjs/react.development\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Concord_Pacific_Master_Plan_Area.jpg/1200px-Concord_Pacific_Master_Plan_Area.jpg\",\n  address: \"Vancouver\",\n  description: \"This is my living place now\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://cdn.britannica.com/93/94493-004-0511607F/Toronto.jpg?s=1500x700&q=85\",\n  address: \"Tronto\",\n  description: \"This is my dream place\"\n}];\n\nfunction HomePage(props) {\n  // in nomal react we use this syntax, but since it's back to empty html as a SPA, it's also gonna be a problem for SEO\n  // so nextjs has another approach which called \"page pre-render\" for this\n  // const [loadedMettups, setLoadedMeetyups] = useState([]);\n  // useEffect(() => {\n  //   // set a http request and fetch data\n  //   setLoadedMeetyups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsx(MeetupList, {\n    meetups: props.meetups\n  });\n} // this function ONLY can use in page components\n// getStaticProps does NOT allow us to change the name\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  return {\n    // you need to always return an object here\n    // IMPORTANT the object has included \"props\", and it has be named props\n    // so that this component can recieve this props\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}