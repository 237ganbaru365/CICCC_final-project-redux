{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fumina/Documents/project/practice/07_nextJS/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\n// import { useEffect, useState } from \"react/cjs/react.development\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Concord_Pacific_Master_Plan_Area.jpg/1200px-Concord_Pacific_Master_Plan_Area.jpg\",\n  address: \"Vancouver\",\n  description: \"This is my living place now\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://cdn.britannica.com/93/94493-004-0511607F/Toronto.jpg?s=1500x700&q=85\",\n  address: \"Tronto\",\n  description: \"This is my dream place\"\n}];\n\nfunction HomePage(props) {\n  // in nomal react we use this syntax, but since it's back to empty html as a SPA, it's also gonna be a problem for SEO\n  // so nextjs has another approach which called \"page pre-render\" for this\n  // const [loadedMettups, setLoadedMeetyups] = useState([]);\n  // useEffect(() => {\n  //   // set a http request and fetch data\n  //   setLoadedMeetyups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n} // this function ONLY can use in page components\n// getStaticProps does NOT allow us to change the name\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  return {\n    // you need to always return an object here\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/fumina/Documents/project/practice/07_nextJS/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps"],"mappings":";;AAAA;AACA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,4IAJJ;AAKEC,EAAAA,OAAO,EAAE,WALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,8EAJJ;AAKEC,EAAAA,OAAO,EAAE,QALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,SAAO;AACL;AACAF,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAER;AADJ;AAFF,GAAP;AAMD;AAED,eAAeM,QAAf","sourcesContent":["// import { useEffect, useState } from \"react/cjs/react.development\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"A First Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Concord_Pacific_Master_Plan_Area.jpg/1200px-Concord_Pacific_Master_Plan_Area.jpg\",\n    address: \"Vancouver\",\n    description: \"This is my living place now\",\n  },\n  {\n    id: \"m2\",\n    title: \"A Second Meetup\",\n    image:\n      \"https://cdn.britannica.com/93/94493-004-0511607F/Toronto.jpg?s=1500x700&q=85\",\n    address: \"Tronto\",\n    description: \"This is my dream place\",\n  },\n];\n\nfunction HomePage(props) {\n  // in nomal react we use this syntax, but since it's back to empty html as a SPA, it's also gonna be a problem for SEO\n  // so nextjs has another approach which called \"page pre-render\" for this\n  // const [loadedMettups, setLoadedMeetyups] = useState([]);\n\n  // useEffect(() => {\n  //   // set a http request and fetch data\n  //   setLoadedMeetyups(DUMMY_MEETUPS);\n  // }, []);\n\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// this function ONLY can use in page components\n// getStaticProps does NOT allow us to change the name\nexport async function getStaticProps() {\n  // fetch data from an API\n  return {\n    // you need to always return an object here\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}